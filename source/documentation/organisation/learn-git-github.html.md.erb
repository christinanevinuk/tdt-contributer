---
title: Learn Git and GitHub
weight: 175
last_reviewed_on: 2021-10-21
review_in: 22 weeks
---
# Learn Git and GitHub
Teaching how Git functions and how to use GitHub is beyond the scope of this introduction. Please read or view one or more of the following tutorials:

## Version control

- [What is version control?](https://git-scm.com/video/what-is-version-control)
<img src="/images/icon-video.jpg" alt="video icon" />
5:58. - the official Git-scm.com video explaining version control.

##Learning Git

- [What is Git?](https://git-scm.com/video/what-is-git)
<img src="/images/icon-video.jpg" alt="video icon" />
8:14. - the official Git-scm.com video explaining Git.

- [Git Essential Training: The Basics](https://www.linkedin.com/learning/git-essential-training-the-basics/use-git-version-control-software-to-manage-project-code)
<img src="/images/icon-video.jpg" alt="video icon" />
Beginner series, 2:55 total. - a thorough video series, including exercises. Covers everything from VCS definition to installing Git on Linux, Mac or Windows. LinkedIn account required.

- [Learn Git branching](https://learngitbranching.js.org/) - interactive tutorial that covers Git branching basics, including remote branching. The Main|Introduction Sequence and Remote|Push & Pull sections are recommended.

- [Learning Git and GitHub](https://www.linkedin.com/learning/learning-git-and-github-14213624/travel-the-multiverse-with-git-and-github)
<img src="/images/icon-video.jpg" alt="video icon" />
Beginner series, 1:52 total. - another thorough video series, with exercises. LinkedIn account required.

- [Git and GitHub for Beginners - Crash Course](https://www.youtube.com/watch?v=RGOj5yH7evk)
<img src="/images/icon-video.jpg" alt="video icon" />
YouTube 1:08:29. - FreeCodeCamp.org's introduction to Git and GitHub.

## Learning GitHub
[Hello World](https://guides.github.com/activities/hello-world/) - a good way to learn to use GitHub is to run through the official GitHub tutorial, Hello World. This takes you through the process of creating a repository and branch, making and committing changes, opening and merging a pull request (PR).

### Learning GitHub Desktop

- [GitHub Desktop Documentation](https://docs.github.com/en/desktop) - the official GitHub Desktop help documentation

- [GitHub Desktop Tutorial - a Really, Really Simple Guide](https://www.classicpress.net/github-desktop-a-really-really-simple-tutorial/) - what it says on the tin. Simple diagrams and longer articles linked to each step.
- [GitHub Desktop Quick Intro For Windows](https://www.youtube.com/watch?v=77W2JSL7-r8)
<img src="/images/icon-video.jpg" alt="video icon" />
YouTube 15:29 - a brief introduction.


### Cheat Sheets

- [GitHub Git cheat sheet](https://training.github.com/downloads/github-git-cheat-sheet.pdf) - PDF covering Git commands, features, SVN migrations, and bash

- [Using Git](https://training.github.com/downloads/github-git-cheat-sheet/) - the official Git-scm.com reference sheet covering Git commands, features, SVN migrations, and bash.


## What you need to know
By the end of learning, you should know the workflow of Git. You will need to understand the following:


- **What a branch is** -
How to create and use a branch. About remote branches. The majority of TRG contributors will not have the authority to edit directly on the main branch, you will be required to create and edit on a branch. Most contributors will also not have authority to merge into main from the branch they are working on.
- **what a commit is** -
how Git takes a 'snapshot'. How to commit changes.
- **What staging is** -
how to stage changes. Staging is invisibly combined with commits for some graphic user interfaces (GUIs), for example GitHub online.
- **What a merge is**
- **What a push is** -
why and how to push commits from your branch to the remote repo.
- **What a pull request (PR) is** -
how to create a PR. These are always made on GitHub, once the commits have been pushed to the repo. This is where you can request reviewers, other than the person with merge authority.

#### Optionally:

- **What the head is**
- **What a rebase is**

These are unlikely to be necessary, and may be left for technical team members to assist with if it is required.
